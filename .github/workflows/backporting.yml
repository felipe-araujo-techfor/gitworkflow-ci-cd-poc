name: Backport
on:
  pull_request:
    types:
      - closed

env:
  GIT_RELEASE_BOT_NAME: pk-boot
  GIT_RELEASE_BOT_EMAIL: pk-boot@playkids.com
  REVIEWERS_TEAMS: pkapp-platforms

jobs:
  backport:
    runs-on: ubuntu-latest
    name: Backport
    steps:
      - name: Backport
        run: |
          echo "Git checkout branch ${GITHUB_REF##*/}"
          git checkout ${GITHUB_REF##*/}
          echo "Git reset hard to ${GITHUB_SHA}"
          git reset --hard ${GITHUB_SHA} 

          echo "Setup git user name to '$GIT_RELEASE_BOT_NAME'"
          git config --global user.name "$GIT_RELEASE_BOT_NAME";
          echo "Setup git user email to '$GIT_RELEASE_BOT_EMAIL'"
          git config --global user.email "$GIT_RELEASE_BOT_EMAIL";  

          cat <<- EOF > $HOME/.netrc
              machine github.com
              login $GIT_RELEASE_BOT_NAME
              password $GITHUB_ACCESS_TOKEN
              machine api.github.com
              login $GIT_RELEASE_BOT_NAME
              password $GITHUB_ACCESS_TOKEN
          EOF
          chmod 600 $HOME/.netrc

          if [[ -n $REVIEWERS_TEAMS ]]; then
            echo "Team reviewers: $REVIEWERS_TEAMS"
            if [[ -n $REVIEWERS_USERS ]]; then
                reviewers="${reviewers},"
            fi
            reviewers="${reviewers}\"team_reviewers\": $REVIEWERS_TEAMS"
          else
            echo "No team reviewer defined for this github action"
          fi
          echo "The reviewers for those PRs: $reviewers"




      # - name: Backport commit
      #   uses: qcastel/github-actions-backport@v0.7.0
      #   with:
      #     backport-branches-regex: "develop"

      #     reviewers-teams: "['pkapp-platforms']"
          
      #     git-release-bot-name: "Git-action-boot"
      #     git-release-bot-email: "git-action-boot@playkids.com"
          
      #     access-token: ${{ secrets.GITHUB_ACCESS_TOKEN }}


# name: Backport
# on:
#   pull_request_target:
#     types:
#       - closed
#       - labeled
 
# jobs:
#   backport:
#     name: Backport Action
#     runs-on: ubuntu-latest
#     steps:
#       - name: Backport
#         uses: sqren/backport-github-action@v1
#         with:
#           access_token: ${{ secrets.GITHUB_TOKEN }}
 
#           # Required
#           # Backport PR by adding a label
#           # Example: PRs labeled with "backport-to-staging" will be backported to "staging"
#           backport-to-develop: '^backport-to-(.*)$'
 
          
#           # Optional
#           # Title for the backport PR
#           # Example: [branch-a] My commit msg
#           # pr_title: '[{targetBranch}] {commitMessages}'
 
#           # Optional
#           # Comma separated list of labels that will be added to the backport PR.
#           # target_pr_labels: 'backport'